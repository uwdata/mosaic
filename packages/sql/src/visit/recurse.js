import {
  AGGREGATE,
  BETWEEN_OPERATOR,
  BINARY_OPERATOR,
  CASE,
  CAST,
  COLUMN_PARAM,
  COLUMN_REF,
  DESCRIBE_QUERY,
  EXPRESSION,
  FRAGMENT,
  FROM_CLAUSE,
  FUNCTION,
  IN_OPERATOR,
  LOGICAL_OPERATOR,
  NOT_BETWEEN_OPERATOR,
  ORDER_BY,
  PARAM,
  SELECT_CLAUSE,
  SELECT_QUERY,
  SET_OPERATION,
  UNARY_OPERATOR,
  WHEN,
  WINDOW,
  WINDOW_CLAUSE,
  WINDOW_DEF,
  WINDOW_FRAME
} from '../constants.js';

export const recurse = {
  [AGGREGATE]: ['args', 'filter'],
  [BETWEEN_OPERATOR]: ['expr', 'extent'],
  [BINARY_OPERATOR]: ['left', 'right'],
  [CASE]: ['expr', '_when', '_else'],
  [CAST]: ['expr'],
  [COLUMN_PARAM]: ['param', 'table'],
  [COLUMN_REF]: ['table'],
  [DESCRIBE_QUERY]: ['query'],
  [EXPRESSION]: ['node'],
  [FRAGMENT]: ['spans'],
  [FROM_CLAUSE]: ['expr'],
  [FUNCTION]: ['args'],
  [IN_OPERATOR]: ['expr', 'values'],
  [LOGICAL_OPERATOR]: ['clauses'],
  [NOT_BETWEEN_OPERATOR]: ['expr', 'extent'],
  [ORDER_BY]: ['expr'],
  [PARAM]: ['value'],
  [SELECT_CLAUSE]: ['expr'],
  [SELECT_QUERY]: ['_with', '_select', '_from', '_where', '_sample', '_groupby', '_having', '_window', '_qualify', '_orderby'],
  [SET_OPERATION]: ['subqueries', '_orderby'],
  [UNARY_OPERATOR]: ['expr'],
  [WHEN]: ['when', 'then'],
  [WINDOW]: ['func', 'def'],
  [WINDOW_CLAUSE]: ['def'],
  [WINDOW_DEF]: ['partition', 'order', 'frame'],
  [WINDOW_FRAME]: ['extent']
};
